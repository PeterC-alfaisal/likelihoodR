goal <- exp.RR
g <- function(x,c1tot,r1tot,r2tot,goal) {
(x*(r2tot)/((c1tot-x)*(r1tot))-goal)^2
}
exa <- optimize(g, c(1, c1tot), tol = toler, c1tot, r1tot, r2tot, goal)
xa <- unname(unlist(exa[1]))
xah <- exp(-sum(a*log(a/xa), b*log(b/(c1tot-xa)), c*log(c/(r1tot-xa)), d*log(d/(r2tot-c1tot+xa))))
}
# and likelihood for 1 (null value)
goal <- null
h <- function(x,c1tot,r1tot,r2tot,goal) {
(x*(r2tot)/((c1tot-x)*(r1tot))-goal)^2
}
exan <- optimize(h, c(1, c1tot), tol = toler, c1tot, r1tot, r2tot, goal)
xa <- unname(unlist(exan[1]))
nullh <- exp(-sum(a*log(a/xa), b*log(b/(c1tot-xa)), c*log(c/(r1tot-xa)), d*log(d/(r2tot-c1tot+xa))))
S2way <- log(1) - log(nullh) # check that this should be the same as S for observed RR
# do the plot with lines
plot(xs,ys,xlim=c(lolim,hilim),type="l", lwd = 1, xlab = "Relative Risk", ylab = "Likelihood")
lines(c(rr,rr),c(0,1),lty=2) # add MLE as dashed line
segments(begL, exp(goalL), endL, exp(goalL), lwd = 0.2, col = "red")
lines(c(null,null),c(0,nullh), lty=1, col = "green") # add H prob as green line
if (!is.null(exp.RR)) {
lines(c(exp.RR,exp.RR), c(0,xah), lty=1, col = "blue") # add H prob as blue line
}
# direct calculation of RR support
suppressWarnings(lt <- chisq.test(table,correct=cc)) # ignore warning message
if (null == 1) S2way <- sum(lt$observed * log(lt$observed/lt$expected))
if (!is.null(exp.RR)) {
SexRR_null <- log(xah) - log(nullh)
SexRR_obs <- SexRR_null - S2way
}
cat("\nSupport for observed RR ", rr, " (dashed line) versus null of ", null,
" (green line) = ", round(S2way,3), "\n Support for specified RR of ", exp.RR,
" (blue line) versus observed = ", if (!is.null(exp.RR)) round(SexRR_obs,3),
"\n Support for specified RR versus null value = ",
if (!is.null(exp.RR)) round(SexRR_null,3), sep= "", "\n   S-", L.int,
" likelihood interval (red line) is: ", c(round(begL,5), " to ", round(endL,5)),
"\n\nChi-square(1) = ", lt$statistic, ",  p = ", round(lt$p.value,4), ", N = ",
grandtot, "\n   Likelihood-based ", 100*(1-alpha), "% confidence interval: ",
c(round(beg,5), " to ", round(end,5)))
invisible(list(S.val = S2way, df = unname(lt$parameter), exp.RR = exp.RR,
S.exp.RRvsObs = SexRR_obs, S.exp.RRvsNull = SexRR_null,
L.int = c(begL, endL), S_int = L.int,
observed = lt$observed, expected = lt$expected,
chi.sq = lt$statistic, corrected = cc, p.value = lt$p.value,
residuals = lt$residuals, conf.int = c(beg, end),
all.err.acc = c(xmin1$objective, xmin2$objective,
xmin1L$objective, xmin2L$objective,
exa$objective, exan$objective)))
}
tab <- as.table(rbind(c(6,587),c(21,581)))
dimnames(tab) <- list(Treatment=c("Folic acid","None"),Defect=c("Yes","No"))
v= L_RR(tab, null=1, exp.RR=0.4, L.int=2)
L_RR <- function(table, null=1, exp.RR=NULL, L.int=2, alpha=0.05, cc=FALSE, toler=0.0001) {
SexRR_null=NULL  #NULL when exp.RR not specified
exa=NULL
exa$objective=NULL
r1tot <- sum(table[1],table[3]) #sum of 1st row
r2tot <- sum(table[2],table[4]) #sum of 2nd row
c1tot <- sum(table[1:2])
c2tot <- sum(table[3:4])
grandtot <- c1tot+c2tot
a <- table[1]
b <- table[2]
c <- table[3]
d <- table[4]
rr <- (a*(b+d))/(b*(a+c)) # RR from the contingency table
res <- 100
arrlen <- res*c1tot-1
xs <- 0; ys <- 0
for (i in 1:arrlen) {
dv <- i/res
ys[i] <- exp(-sum(a*log(a/dv), b*log(b/(c1tot-dv)), c*log(c/(r1tot-dv)), d*log(d/(r2tot-c1tot+dv))))
xs[i] <- dv*r2tot/((c1tot-dv)*(r1tot))
}
# likelihood-based % confidence interval
goal = -qchisq(1-alpha,1)/2
f <- function(x,a,b,c,d,c1tot,r1tot,r2tot,goal) {
(-sum(a*log(a/x), b*log(b/(c1tot-x)), c*log(c/(r1tot-x)), d*log(d/(r2tot-c1tot+x)))-goal)^2
}
xmin1 <- optimize(f, c(1, a), tol = toler, a, b, c, d, c1tot, r1tot, r2tot, goal)
xmin2 <- optimize(f, c(a, c1tot), tol = toler, a, b, c, d, c1tot, r1tot, r2tot, goal)
beg <- xmin1$minimum*r2tot/((c1tot-xmin1$minimum)*r1tot)
end <- xmin2$minimum*r2tot/((c1tot-xmin2$minimum)*r1tot)
# same for likelihood
goalL <- -L.int
xmin1L <- optimize(f, c(1, a), tol = toler, a, b, c, d, c1tot, r1tot, r2tot, goalL)
xmin2L <- optimize(f, c(a, c1tot), tol = toler, a, b, c, d, c1tot, r1tot, r2tot, goalL)
begL <- xmin1L$minimum*r2tot/((c1tot-xmin1L$minimum)*r1tot)
endL <- xmin2L$minimum*r2tot/((c1tot-xmin2L$minimum)*r1tot)
# to determine x axis space for plot
dif <- rr-beg
lolim <- rr - 3*dif; hilim <- rr + 4*dif
if (rr < 1 ) { hilim <- rr + 6*dif}
if (lolim < 0) {lolim <- 0}
# to determine height of exp.RR on likelihood function
if (!is.null(exp.RR)) {
goal <- exp.RR
g <- function(x,c1tot,r1tot,r2tot,goal) {
(x*(r2tot)/((c1tot-x)*(r1tot))-goal)^2
}
exa <- optimize(g, c(1, c1tot), tol = toler, c1tot, r1tot, r2tot, goal)
xa <- unname(unlist(exa[1]))
xah <- exp(-sum(a*log(a/xa), b*log(b/(c1tot-xa)), c*log(c/(r1tot-xa)), d*log(d/(r2tot-c1tot+xa))))
}
# and likelihood for 1 (null value)
goal <- null
h <- function(x,c1tot,r1tot,r2tot,goal) {
(x*(r2tot)/((c1tot-x)*(r1tot))-goal)^2
}
exan <- optimize(h, c(1, c1tot), tol = toler, c1tot, r1tot, r2tot, goal)
xa <- unname(unlist(exan[1]))
nullh <- exp(-sum(a*log(a/xa), b*log(b/(c1tot-xa)), c*log(c/(r1tot-xa)), d*log(d/(r2tot-c1tot+xa))))
S2way <- log(1) - log(nullh) # check that this should be the same as S for observed RR
# do the plot with lines
plot(xs,ys,xlim=c(lolim,hilim),type="l", lwd = 1, xlab = "Relative Risk", ylab = "Likelihood")
lines(c(rr,rr),c(0,1),lty=2) # add MLE as dashed line
segments(begL, exp(goalL), endL, exp(goalL), lwd = 0.2, col = "red")
lines(c(null,null),c(0,nullh), lty=1, col = "green") # add H prob as green line
if (!is.null(exp.RR)) {
lines(c(exp.RR,exp.RR), c(0,xah), lty=1, col = "blue") # add H prob as blue line
}
# direct calculation of RR support
suppressWarnings(lt <- chisq.test(table,correct=cc)) # ignore warning message
if (null == 1) S2way <- sum(lt$observed * log(lt$observed/lt$expected))
if (!is.null(exp.RR)) {
SexRR_null <- log(xah) - log(nullh)
SexRR_obs <- SexRR_null - S2way
}
cat("\nSupport for observed RR ", round(rr,4), " (dashed line) versus null of ", null,
" (green line) = ", round(S2way,3), "\n Support for specified RR of ", exp.RR,
" (blue line) versus observed = ", if (!is.null(exp.RR)) round(SexRR_obs,3),
"\n Support for specified RR versus null value = ",
if (!is.null(exp.RR)) round(SexRR_null,3), sep= "", "\n   S-", L.int,
" likelihood interval (red line) is: ", c(round(begL,5), " to ", round(endL,5)),
"\n\nChi-square(1) = ", lt$statistic, ",  p = ", round(lt$p.value,4), ", N = ",
grandtot, "\n   Likelihood-based ", 100*(1-alpha), "% confidence interval: ",
c(round(beg,5), " to ", round(end,5)))
invisible(list(S.val = S2way, df = unname(lt$parameter), exp.RR = exp.RR,
S.exp.RRvsObs = SexRR_obs, S.exp.RRvsNull = SexRR_null,
L.int = c(begL, endL), S_int = L.int,
observed = lt$observed, expected = lt$expected,
chi.sq = lt$statistic, corrected = cc, p.value = lt$p.value,
residuals = lt$residuals, conf.int = c(beg, end),
all.err.acc = c(xmin1$objective, xmin2$objective,
xmin1L$objective, xmin2L$objective,
exa$objective, exan$objective)))
}
v= L_RR(tab, null=1, exp.RR=0.4, L.int=2)
L_efficacy <- function(a, n, null=0, exp.eff=NULL, L.int=2, alpha=0.05, toler=0.0001){
r = n - a; eff = (a - r)/a; goal = -qchisq(1-alpha,1)/2
n_a <- n - n/(2 - null)  # a for null
Sexeff_null=-(a*log(a)+r*log(r)-(a*log(n-n_a)+r*log(n_a)))  #NULL when exp.OR not specified
n_a_h <- exp(Sexeff_null)
S.eff <- log(1) - Sexeff_null  # support for observed versus null
S.exp_null = NULL       # support for expected efficacy versus null
if (!is.null(exp.eff)) {
x_a <- n - n/(2 - exp.eff) # a for exp efficacy
Sexef <- -(a*log(a)+r*log(r)-(a*log(n-x_a)+r*log(x_a)))
x_a_h <- exp(Sexef)
S.exp_null <- Sexef - Sexeff_null
S.exp_obs <- S.exp_null - S.eff
}
# direct calculation of efficacy support
obs <- c(a,n-a); exp.p <- c((n-n_a)/n,n_a/n)
suppressWarnings(lt <- chisq.test(obs,p=exp.p)) # ignore warning message
f <- function(x,a,r,goal) (-(a*log(a)+r*log(r)-(a*log(n-x)+r*log(x)))-goal)^2
xmin1 <- optimize(f, c(-1, r), tol = toler, a, r, goal)
xmin2 <- optimize(f, c(r, n), tol = toler, a, r, goal)
beg <- (n - 2*xmin2$minimum)/(n-xmin2$minimum)
end <- (n - 2*xmin1$minimum)/(n-xmin1$minimum)
# same for likelihood
goalL <- -L.int
xmin1L <- optimize(f, c(-1, r), tol = toler, a, r, goalL)
xmin2L <- optimize(f, c(r, n), tol = toler, a, r, goalL)
begL <- (n - 2*xmin2L$minimum)/(n-xmin2L$minimum)
endL <- (n - 2*xmin1L$minimum)/(n-xmin1L$minimum)
if (eff < 0) { lolim <- -1; hilim <- 0}
if (eff < .5) { lolim <- 0; hilim <- eff + 6*sqrt(eff*(1-eff)/n)
} else {hilim <- 1; lolim <- eff - 6*sqrt(eff*(1-eff)/n)}
if (lolim < -1) {lolim <- -1}
if (hilim > 1) {hilim <- 1}
res <- 100
arrlen <- res*n-1
xs <- 0; ys <- 0
for (i in 1:arrlen) {
dv <- i/res
ys[i] <- exp(-(a*log(a)+r*log(r)-(a*log(n-dv)+r*log(dv))))
xs[i] <- (n-2*dv)/(n-dv)
}
plot(xs, ys, xlim = c(lolim,hilim), type="l", lwd = 1,
xlab = "Efficacy", ylab = "Likelihood")
lines(c(eff,eff),c(0,1),lty=2) # add MLE as dashed line
segments(begL, exp(goalL), endL, exp(goalL), lwd = 0.2, col = "red")
lines(c(null,null), c(0,n_a_h), lty=1, col = "green") # add green line for null
if (!is.null(exp.eff)) {
lines(c(exp.eff,exp.eff), c(0,x_a_h), lty=1, col = "blue") # add H prob as blue line
}
cat("\nSupport for observed efficacy of ", round(eff,4), " (dashed line) versus null of ", null,
" (green line) = ", round(S.eff,3), "\n Support for specified efficacy of ", exp.eff,
" (blue line) versus observed efficacy = ", if (!is.null(exp.eff)) round(S.exp_obs,3),
"\n Support for specified efficacy versus null value = ", if (!is.null(exp.eff)) round(S.exp_null,3),
sep= "", "\n   S-", L.int, " likelihood interval (red line) is: ", c(round(begL,5), " to ", round(endL,5)),
"\n\nChi-square(1) = ", round(lt$statistic,3), ",  p = ", round(lt$p.value,4), ", N = ",
n, "\n   Likelihood-based ", 100*(1-alpha), "% confidence interval: ",
c(round(beg,5), " to ", round(end,5)))
invisible(list(S.val = S.eff,  obs.eff = eff, null = null, exp.eff = exp.eff, S.exp.vsObs = S.exp_obs,
S.exp.vsNull = S.exp_null, L.int = c(begL, endL), S_int = L.int,
observed = lt$observed, expected = lt$expected,
chi.sq = unname(lt$statistic), p.value = lt$p.value, df = unname(lt$parameter),
residuals = lt$residuals, conf.int = c(beg, end), alpha = alpha,
all.err.acc = c(xmin1$objective, xmin2$objective,
xmin1L$objective, xmin2L$objective)))
}
m = L_efficacy(a = 86, n = 94, null=0, exp.eff=0.85, L.int=3, alpha=0.05, toler=0.0001)
m
v=L_OR(tab, null= 1, exp.OR =0.6, L.int = 3)
v
L_ttest <- function(data1, data2=NULL, null=0, d=0.5, alt.2=NULL, L.int=2) {
x=0
if (is.null(d)) d = 0
adata <- data1
if (!is.null(data2)) {
dat <- data.frame(data1,data2)
ad <- dat[complete.cases(dat), ] # remove missing, NA or NaN, case-wise
adata <- ad$data2-ad$data1
}
t0 <- t.test(adata, mu = 0) # t test
tval <- unname(unlist(abs(t0$statistic))) # t value, abs & remove label
m.obs <- unname(unlist(t0$estimate)) # observed mean
df <- unname(unlist(t0$parameter)) # df
N <- df+1
sed <- m.obs/tval # standard error
alt.1 <- d*sed*sqrt(N)
t0val <- (0 - m.obs)/sed # t value for H0
t1val <- (alt.1 - m.obs)/sed # t value for H1
like0 <- (1 + t0val^2/df)^-(N/2) # L0
like1 <- (1 + t1val^2/df)^-(N/2) # L1
# Supports
S_10 <- log(like1)-log(like0)
S_12 = NULL
S_20 = NULL
if (!is.null(alt.2 )) {
t2val <- (alt.2 - m.obs)/sed
like2 <- (1 + t2val^2/df)^-(N/2) # L2
S_12 <- log(like1)-log(like2)
S_20 <- log(like2)-log(like0)
}
# Maximum Support
S_m <- log(1) - log(like0)
# Plot the likelihood function
curve((1 + ((m.obs-x)/sed)^2/df)^-(N/2),
xlim = c(m.obs-5*sed,m.obs+5*sed), ylab = "Likelihood",
xlab = "Mean value")
lines(c(m.obs,m.obs),c(0,1),lty=2) # add mean as dashed line
lines(c(alt.1,alt.1),c(0,(1 + ((m.obs-alt.1)/sed)^2/df)^-(N/2)),lty=1, col = "blue") # d
if (!is.null(alt.2 )) lines(c(alt.2,alt.2),c(0,(1 + ((m.obs-alt.2)/sed)^2/df)^-(N/2)),lty=1, col = "green") # alt.2 value
# Add Likelihood interval
lolim <- m.obs - sed*sqrt((exp(L.int*2/N)-1)*df)
hilim <- m.obs + sed*sqrt((exp(L.int*2/N)-1)*df)
segments(lolim, exp(-L.int), hilim, exp(-L.int), lwd = 0.2, col = "red")
cat("Maximum support = ", round(S_m,3), sep= ""," for observed mean ", m.obs,
" against the null ", null, "\n Support for d of ", d,
" (", alt.1, ", blue line) versus null = ", round(S_10,3),
"\n Support for d versus 2nd alt Hypothesis ", alt.2, " (green line) = ", if (!is.null(alt.2 )) round(S_12,3),
"\n Support for 2nd alt Hypothesis versus null = ", if (!is.null(alt.2 )) round(S_20,3),
"\n\n S-", L.int, " likelihood interval (red line) is: ", c(round(lolim,5),
" to ", round(hilim,5)))
invisible(list(obs.mean = m.obs, df = df, alt.H1 = alt.1, alt.H2 = alt.2, S_max = S_m,
S_10 = S_10, S_12 = S_12, S_20 = S_20, like.int = c(lolim, hilim), like.int.spec = L.int,
null.value = null))
}
mysample <- c(0.7, -1.6, -0.2, -1.2, -0.1, 3.4, 3.7, 0.8, 0.0, 2.0)
m=L_ttest(mysample, d=0.5, alt.2=2, L.int=2)
L_ttest <- function(data1, data2=NULL, null=0, d=0.5, alt.2=NULL, L.int=2) {
x=0
if (is.null(d)) d = 0
adata <- data1
if (!is.null(data2)) {
dat <- data.frame(data1,data2)
ad <- dat[complete.cases(dat), ] # remove missing, NA or NaN, case-wise
adata <- ad$data2-ad$data1
}
t0 <- t.test(adata, mu = 0) # t test
tval <- unname(unlist(abs(t0$statistic))) # t value, abs & remove label
m.obs <- unname(unlist(t0$estimate)) # observed mean
df <- unname(unlist(t0$parameter)) # df
N <- df+1
sed <- m.obs/tval # standard error
alt.1 <- d*sed*sqrt(N)
t0val <- (0 - m.obs)/sed # t value for H0
t1val <- (alt.1 - m.obs)/sed # t value for H1
like0 <- (1 + t0val^2/df)^-(N/2) # L0
like1 <- (1 + t1val^2/df)^-(N/2) # L1
# Supports
S_10 <- log(like1)-log(like0)
S_12 = NULL
S_20 = NULL
if (!is.null(alt.2 )) {
t2val <- (alt.2 - m.obs)/sed
like2 <- (1 + t2val^2/df)^-(N/2) # L2
S_12 <- log(like1)-log(like2)
S_20 <- log(like2)-log(like0)
}
# Maximum Support
S_m <- log(1) - log(like0)
# Plot the likelihood function
curve((1 + ((m.obs-x)/sed)^2/df)^-(N/2),
xlim = c(m.obs-5*sed,m.obs+5*sed), ylab = "Likelihood",
xlab = "Mean value")
lines(c(m.obs,m.obs),c(0,1),lty=2) # add mean as dashed line
lines(c(null, null), c(0,(1 + ((m.obs-null)/sed)^2/df)^-(N/2)),lty=1, col = "black") # for null
lines(c(alt.1,alt.1),c(0,(1 + ((m.obs-alt.1)/sed)^2/df)^-(N/2)),lty=1, col = "blue") # d
if (!is.null(alt.2 )) lines(c(alt.2,alt.2),c(0,(1 + ((m.obs-alt.2)/sed)^2/df)^-(N/2)),lty=1, col = "green") # alt.2 value
# Add Likelihood interval
lolim <- m.obs - sed*sqrt((exp(L.int*2/N)-1)*df)
hilim <- m.obs + sed*sqrt((exp(L.int*2/N)-1)*df)
segments(lolim, exp(-L.int), hilim, exp(-L.int), lwd = 0.2, col = "red")
cat("Maximum support for the observed mean ", m.obs, "(dashed line) against the null ",
null, " (black line) = ", round(S_m,3), sep= "", "\n Support for d of ", d,
" (", alt.1, ", blue line) versus null = ", round(S_10,3),
"\n Support for d versus 2nd alt Hypothesis ", alt.2, " (green line) = ", if (!is.null(alt.2 )) round(S_12,3),
"\n Support for 2nd alt Hypothesis versus null = ", if (!is.null(alt.2 )) round(S_20,3),
"\n\n S-", L.int, " likelihood interval (red line) is: ", c(round(lolim,5),
" to ", round(hilim,5)))
invisible(list(obs.mean = m.obs, df = df, alt.H1 = alt.1, alt.H2 = alt.2, S_max = S_m,
S_10 = S_10, S_12 = S_12, S_20 = S_20, like.int = c(lolim, hilim), like.int.spec = L.int,
null.value = null))
}
m=L_ttest(mysample, d=0.5, alt.2=2, L.int=2)
m=L_ttest(mysample, d=0.5, alt.2=NULL, L.int=2)
# related samples
mysample2 <- c(1.9, 0.8, 1.1, 0.1, -0.1, 4.4, 5.5, 1.6, 4.6, 3.4)
L_ttest(mysample, mysample2, d=1, alt.2=2, L.int=3)
L_2S_ttest <- function(data, group, veq=0, null=0, d=0.5, alt.2=NULL, L.int=2) {
if (is.null(d)) d = 0
dat <- data.frame(data, group)
ad <- dat[complete.cases(dat), ] # remove missing, NA or NaN, case-wise
dat <- ad$data
gp <- ad$group
tres0 <- t.test(dat~gp,paired=FALSE,var.equal=veq) #
m.obs <- unname(tres0$estimate[1]-tres0$estimate[2]) # t test does it this way
sed <- ((tres0$conf.int[2]-tres0$conf.int[1])/2)/qt(.975, tres0$parameter) #SE
ns <- length(sort(dat[gp==1])) #sort to remove NA
nc <- length(sort(dat[gp==0]))
sd1 <- sd(dat[gp==1],na.rm=TRUE)
sd2 <- sd(dat[gp==0],na.rm=TRUE)
SD <- sqrt(sd1^2+sd2^2)
alt.1 <- SD*d
tres1 <- t.test(dat~gp, mu = alt.1, paired=FALSE, var.equal=veq) #effect size
N <- ns + nc
df <- unname(tres1$parameter)
like0 <- unname((1 + tres0$statistic^2/df)^-(N/2)) #L0
like1 <- unname((1 + tres1$statistic^2/df)^-(N/2)) #L1
# Supports
S_10 <- log(like1)-log(like0)
S_12 = NULL
S_20 = NULL
if (!is.null(alt.2 )) {
tres2 <- t.test(dat~gp, mu = alt.2, paired=FALSE, var.equal=veq)  #alt H2
like2 <- unname((1 + tres2$statistic^2/df)^-(N/2)) #L2
S_12 <- log(like1)-log(like2)
S_20 <- log(like2)-log(like0)
}
# Maximum likelihood ratio and S
S_m <- log(1) - log(like0)
# Plot the likelihood function
x=0
curve((1 + ((m.obs-x)/sed)^2/df)^-(N/2),
xlim = c(m.obs-5*sed,m.obs+5*sed), ylab = "Likelihood",
xlab = "Mean difference")
lines(c(m.obs,m.obs),c(0,1),lty=2) # add mean as dashed line
lines(c(null, null), c(0,(1 + ((m.obs-null)/sed)^2/df)^-(N/2)),lty=1, col = "black") # for null
lines(c(alt.1,alt.1),c(0,(1 + ((m.obs-alt.1)/sed)^2/df)^-(N/2)),lty=1, col = "blue") # d
if (!is.null(alt.2)) lines(c(alt.2,alt.2),c(0,(1 + ((m.obs-alt.2)/sed)^2/df)^-(N/2)),lty=1, col = "green") # alt.2 value
# Add Likelihood interval
lolim <- m.obs - sed*sqrt((exp(L.int*2/N)-1)*df)
hilim <- m.obs + sed*sqrt((exp(L.int*2/N)-1)*df)
segments(lolim, exp(-L.int), hilim, exp(-L.int), lwd = 0.2, col = "red")
cat("Maximum support for the observed mean ", m.obs, " (dashed line) against the null ",
null, " (black line) = ", round(S_m,3), sep= "", "\n Support for d of ", d,
" (", alt.1, ", blue line) versus null = ", round(S_10,3),
"\n Support for d versus 2nd alt Hypothesis ", alt.2, " (green line) = ",
if (!is.null(alt.2 )) round(S_12,3), "\n Support for 2nd alt Hypothesis versus null = ",
if (!is.null(alt.2 )) round(S_20,3),
"\n\n S-", L.int, " likelihood interval: ", c(round(lolim,5), "  ", round(hilim,5)))
invisible(list(obs.diff = m.obs, df = df, alt.H1 = alt.1, alt.H2 = alt.2, S_max = S_m,
S_10 = S_10, S_12 = S_12, S_20 = S_20, like.int = c(lolim, hilim),
L.int.spec = L.int, null.value = null))
}
mysample <- c(0.7, -1.6, -0.2, -1.2, -0.1, 3.4, 3.7, 0.8, 0.0, 2.0)
treat <- rep(1:0,each=5)
m=L_2S_ttest(mysample, treat, veq=0, null=0, d=0.5, alt.=NULL, L.int=2)
m=L_2S_ttest(mysample, treat, veq=0, null=0, d=0.5, alt.=2, L.int=2)
m=L_ttest(mysample, d=0.5, alt.2=NULL, L.int=2)
L_2S_ttest <- function(data, group, veq=0, null=0, d=0.5, alt.2=NULL, L.int=2) {
if (is.null(d)) d = 0
dat <- data.frame(data, group)
ad <- dat[complete.cases(dat), ] # remove missing, NA or NaN, case-wise
dat <- ad$data
gp <- ad$group
tres0 <- t.test(dat~gp,paired=FALSE,var.equal=veq) #
m.obs <- unname(tres0$estimate[1]-tres0$estimate[2]) # t test does it this way
sed <- ((tres0$conf.int[2]-tres0$conf.int[1])/2)/qt(.975, tres0$parameter) #SE
ns <- length(sort(dat[gp==1])) #sort to remove NA
nc <- length(sort(dat[gp==0]))
sd1 <- sd(dat[gp==1],na.rm=TRUE)
sd2 <- sd(dat[gp==0],na.rm=TRUE)
SD <- sqrt(sd1^2+sd2^2)
alt.1 <- SD*d
tres1 <- t.test(dat~gp, mu = alt.1, paired=FALSE, var.equal=veq) #effect size
N <- ns + nc
df <- unname(tres1$parameter)
like0 <- unname((1 + tres0$statistic^2/df)^-(N/2)) #L0
like1 <- unname((1 + tres1$statistic^2/df)^-(N/2)) #L1
# Supports
S_10 <- log(like1)-log(like0)
S_12 = NULL
S_20 = NULL
if (!is.null(alt.2 )) {
tres2 <- t.test(dat~gp, mu = alt.2, paired=FALSE, var.equal=veq)  #alt H2
like2 <- unname((1 + tres2$statistic^2/df)^-(N/2)) #L2
S_12 <- log(like1)-log(like2)
S_20 <- log(like2)-log(like0)
}
# Maximum likelihood ratio and S
S_m <- log(1) - log(like0)
# Plot the likelihood function
x=0
curve((1 + ((m.obs-x)/sed)^2/df)^-(N/2),
xlim = c(m.obs-5*sed,m.obs+5*sed), ylab = "Likelihood",
xlab = "Mean difference")
lines(c(m.obs,m.obs),c(0,1),lty=2) # add mean as dashed line
lines(c(null, null), c(0,(1 + ((m.obs-null)/sed)^2/df)^-(N/2)),lty=1, col = "black") # for null
lines(c(alt.1,alt.1),c(0,(1 + ((m.obs-alt.1)/sed)^2/df)^-(N/2)),lty=1, col = "blue") # d
if (!is.null(alt.2)) lines(c(alt.2,alt.2),c(0,(1 + ((m.obs-alt.2)/sed)^2/df)^-(N/2)),lty=1, col = "green") # alt.2 value
# Add Likelihood interval
lolim <- m.obs - sed*sqrt((exp(L.int*2/N)-1)*df)
hilim <- m.obs + sed*sqrt((exp(L.int*2/N)-1)*df)
segments(lolim, exp(-L.int), hilim, exp(-L.int), lwd = 0.2, col = "red")
cat("Maximum support for the observed mean ", m.obs, " (dashed line) against the null ",
null, " (black line) = ", round(S_m,3), sep= "", "\n Support for d of ", d,
" (", alt.1, ", blue line) versus null = ", round(S_10,3),
"\n Support for d versus 2nd alt Hypothesis ", alt.2, " (green line) = ",
if (!is.null(alt.2 )) round(S_12,3), "\n Support for 2nd alt Hypothesis versus null = ",
if (!is.null(alt.2 )) round(S_20,3),
"\n\n S-", L.int, " likelihood interval (red line) from ", c(round(lolim,5), " to ", round(hilim,5)))
invisible(list(obs.diff = m.obs, df = df, alt.H1 = alt.1, alt.H2 = alt.2, S_max = S_m,
S_10 = S_10, S_12 = S_12, S_20 = S_20, like.int = c(lolim, hilim),
L.int.spec = L.int, null.value = null))
}
L_ttest <- function(data1, data2=NULL, null=0, d=0.5, alt.2=NULL, L.int=2) {
x=0
if (is.null(d)) d = 0
adata <- data1
if (!is.null(data2)) {
dat <- data.frame(data1,data2)
ad <- dat[complete.cases(dat), ] # remove missing, NA or NaN, case-wise
adata <- ad$data2-ad$data1
}
t0 <- t.test(adata, mu = 0) # t test
tval <- unname(unlist(abs(t0$statistic))) # t value, abs & remove label
m.obs <- unname(unlist(t0$estimate)) # observed mean
df <- unname(unlist(t0$parameter)) # df
N <- df+1
sed <- m.obs/tval # standard error
alt.1 <- d*sed*sqrt(N)
t0val <- (0 - m.obs)/sed # t value for H0
t1val <- (alt.1 - m.obs)/sed # t value for H1
like0 <- (1 + t0val^2/df)^-(N/2) # L0
like1 <- (1 + t1val^2/df)^-(N/2) # L1
# Supports
S_10 <- log(like1)-log(like0)
S_12 = NULL
S_20 = NULL
if (!is.null(alt.2 )) {
t2val <- (alt.2 - m.obs)/sed
like2 <- (1 + t2val^2/df)^-(N/2) # L2
S_12 <- log(like1)-log(like2)
S_20 <- log(like2)-log(like0)
}
# Maximum Support
S_m <- log(1) - log(like0)
# Plot the likelihood function
curve((1 + ((m.obs-x)/sed)^2/df)^-(N/2),
xlim = c(m.obs-5*sed,m.obs+5*sed), ylab = "Likelihood",
xlab = "Mean value")
lines(c(m.obs,m.obs),c(0,1),lty=2) # add mean as dashed line
lines(c(null, null), c(0,(1 + ((m.obs-null)/sed)^2/df)^-(N/2)),lty=1, col = "black") # for null
lines(c(alt.1,alt.1),c(0,(1 + ((m.obs-alt.1)/sed)^2/df)^-(N/2)),lty=1, col = "blue") # d
if (!is.null(alt.2 )) lines(c(alt.2,alt.2),c(0,(1 + ((m.obs-alt.2)/sed)^2/df)^-(N/2)),lty=1, col = "green") # alt.2 value
# Add Likelihood interval
lolim <- m.obs - sed*sqrt((exp(L.int*2/N)-1)*df)
hilim <- m.obs + sed*sqrt((exp(L.int*2/N)-1)*df)
segments(lolim, exp(-L.int), hilim, exp(-L.int), lwd = 0.2, col = "red")
cat("Maximum support for the observed mean ", m.obs, " (dashed line) against the null ",
null, " (black line) = ", round(S_m,3), sep= "", "\n Support for d of ", d,
" (", alt.1, ", blue line) versus null = ", round(S_10,3),
"\n Support for d versus 2nd alt Hypothesis ", alt.2, " (green line) = ", if (!is.null(alt.2 )) round(S_12,3),
"\n Support for 2nd alt Hypothesis versus null = ", if (!is.null(alt.2 )) round(S_20,3),
"\n\n S-", L.int, " likelihood interval (red line) is from ", c(round(lolim,5),
" to ", round(hilim,5)))
invisible(list(obs.mean = m.obs, df = df, alt.H1 = alt.1, alt.H2 = alt.2, S_max = S_m,
S_10 = S_10, S_12 = S_12, S_20 = S_20, like.int = c(lolim, hilim), like.int.spec = L.int,
null.value = null))
}
m=L_ttest(mysample, d=0.5, alt.2=NULL, L.int=2)
m=L_2S_ttest(mysample, treat, veq=0, null=0, d=0.5, alt.=2, L.int=2)
library(likelihoodR)
library(likelihoodR)
library(likelihoodR)
